---
# Apache2 configuration

- name: install apache2
  apt: name=apache2 state=latest update_cache=yes

- name: enable rewrite
  command: a2enmod rewrite
  notify: restart-apache

- name: enable proxy
  command: a2enmod proxy
  notify: restart-apache

- name: create prod csr
  command: openssl req -new -newkey rsa:2048 -sha256 -nodes -keyout /etc/ssl/private/key.pem -out /etc/ssl/{{ apache_server_name }}.der -outform der -subj "/C=FR/ST=Paris/L=Paris/O={{ apache_server_name }}/emailAddress=root@{{ apache_server_name}}/CN={{ apache_server_name }}" -reqexts SAN
  when: env == 'production'

- name: create self-signed certificate
  command: openssl req -new -nodes -x509 -subj "/C=FR/ST=Dtc/L=Dtc/O=I/CN={{ apache_server_name }}" -days 3650 -keyout /etc/ssl/private/key.pem -out /etc/ssl/{{ apache_server_name }}.crt -extensions v3_ca creates=/etc/ssl/cert.pem
  notify: restart-apache
  when: env != 'production'

- letsencrypt:
    account_key: /etc/ssl/private/key.pem
    csr: /etc/ssl/{{ apache_server_name }}.csr
    dest: /etc/ssl/{{ apache_server_name }}.crt
  register: letsencrypt_challenge
  when: env == 'production'

 - copy:
     dest: /var/www/{{ letsencrypt_challenge['challenge_data'][apache_server_name]['http-01']['resource'] }}
     content: "{{ letsencrypt_challenge['challenge_data'][apache_server_name]['http-01']['resource_value'] }}"
   when: env == 'production' and letsencrypt_challenge|changed

- letsencrypt:
    account_key: /etc/ssl/private/key.pem
    csr: /etc/ssl/{{ apache_server_name }}.csr
    dest: /etc/ssl/{{ apache_server_name }}.crt
    data: "{{ letsencrypt_challenge }}"
  notify: restart-apache
  when: env == 'production'

- name: enable SSL
  command: a2enmod ssl
  notify: restart-apache

- name: remove default vhost
  file: dest=/etc/apache2/sites-enabled/000-default.conf state=absent

- name: install vhost
  template: src=etc/apache2/sites-available/vhost dest=/etc/apache2/sites-available/{{ app_name }}.conf owner=root group=root mode=0644

- name: check src folder (dev)
  when: env != 'production'
  file: dest={{ app_path }} state=directory owner={{ ansible_user }} group={{ ansible_user }}

- name: link vhost
  file: src=/etc/apache2/sites-available/{{app_name}}.conf dest=/etc/apache2/sites-enabled/{{app_name}}.conf state=link force=yes
  notify: restart-apache

- name: host change
  lineinfile: dest=/etc/hosts line='127.0.1.2 {{ apache_server_name }}'

- name: change apache user
  when: env != 'production'
  replace: dest=/etc/apache2/envvars regexp='^export APACHE_RUN_USER=www-data$' replace='export APACHE_RUN_USER=vagrant'

- name: change lock owner
  when: env != 'production'
  file: path=/run/lock/apache2/ owner=vagrant group=vagrant
  notify: restart-apache
